(function mainWrapper(w){"use strict";const H=Hyphenopoly;const SOFTHYPHEN=String.fromCharCode(173);function empty(){return Object.create(null)}
Math.imul=Math.imul||function imul(a,b){const aHi=(a>>>16)&0xffff;const aLo=a&0xffff;const bHi=(b>>>16)&0xffff;const bLo=b&0xffff;return((aLo*bLo)+((((aHi*bLo)+(aLo*bHi))<<16)>>>0)|0)};function setProp(val,props){return{"configurable":(props&4)>0,"enumerable":(props&2)>0,"writable":(props&1)>0,"value":val}}(function configurationFactory(){const generalDefaults=Object.create(null,{"defaultLanguage":setProp("en-us",2),"dontHyphenate":setProp((function createList(){const r=empty();const list="abbr,acronym,audio,br,button,code,img,input,kbd,label,math,option,pre,samp,script,style,sub,sup,svg,textarea,var,video";list.split(",").forEach(function add(value){r[value]=!0});return r}()),2),"dontHyphenateClass":setProp("donthyphenate",2),"exceptions":setProp(empty(),2),"normalize":setProp(!1,2),"safeCopy":setProp(!0,2),"timeout":setProp(1000,2)});const settings=Object.create(generalDefaults);const perClassDefaults=Object.create(null,{"compound":setProp("hyphen",2),"hyphen":setProp(SOFTHYPHEN,2),"leftmin":setProp(0,2),"leftminPerLang":setProp(0,2),"minWordLength":setProp(6,2),"orphanControl":setProp(1,2),"rightmin":setProp(0,2),"rightminPerLang":setProp(0,2)});Object.keys(H.setup).forEach(function copySettings(key){if(key==="selectors"){const selectors=Object.keys(H.setup.selectors);Object.defineProperty(settings,"selectors",setProp(selectors,2));selectors.forEach(function copySelectors(sel){const tmp=empty();Object.keys(H.setup.selectors[sel]).forEach(function copySelectorSettings(k){tmp[k]=setProp(H.setup.selectors[sel][k],2)});Object.defineProperty(settings,sel,setProp(Object.create(perClassDefaults,tmp),2))})}else if(key==="dontHyphenate"){const tmp=empty();Object.keys(H.setup.dontHyphenate).forEach(function copyTagNames(k){tmp[k]=setProp(H.setup.dontHyphenate[k],2)});Object.defineProperty(settings,key,setProp(Object.create(generalDefaults.dontHyphenate,tmp),3))}else{Object.defineProperty(settings,key,setProp(H.setup[key],3))}});H.c=settings}());(function H9Y(){const C=H.c;let mainLanguage=null;let elements=null;function makeElementCollection(){const list=new Map();const counter=[0];function add(el,lang,sel){const elo={"element":el,"selector":sel};if(!list.has(lang)){list.set(lang,[])}
list.get(lang).push(elo);counter[0]+=1;return elo}
function each(fn){list.forEach(function eachElement(val,key){fn(key,val)})}
return{"add":add,"counter":counter,"each":each,"list":list}}
function registerOnCopy(el){el.addEventListener("copy",function oncopy(e){e.preventDefault();const selectedText=window.getSelection().toString();e.clipboardData.setData("text/plain",selectedText.replace(new RegExp(SOFTHYPHEN,"g"),""))},!0)}
function getLang(el,fallback){try{return(el.getAttribute("lang"))?el.getAttribute("lang").toLowerCase():el.tagName.toLowerCase()==="html"?fallback?mainLanguage:null:getLang(el.parentNode,fallback)}catch(ignore){return null}}
function autoSetMainLanguage(){const el=w.document.getElementsByTagName("html")[0];mainLanguage=getLang(el,!1);if(!mainLanguage&&C.defaultLanguage!==""){mainLanguage=C.defaultLanguage}}
function nodeMatchedBy(n,sel){if(!n.matches){n.matches=n.msMatchesSelector||n.webkitMatchesSelector}
return n.matches(sel)}
function collectElements(){elements=makeElementCollection();const dontHyphenateSelector=(function createSel(){let s="."+H.c.dontHyphenateClass;let k=null;for(k in C.dontHyphenate){if(C.dontHyphenate[k]){s+=", "+k}}
return s}());const matchingSelectors=C.selectors.join(", ")+", "+dontHyphenateSelector;function getElementLanguage(el,pLang){if(el.lang&&typeof el.lang==="string"){return el.lang.toLowerCase()}else if(pLang&&pLang!==""){return pLang.toLowerCase()}
return getLang(el,!0)}
function processElements(el,pLang,sel,isChild){isChild=isChild||!1;const eLang=getElementLanguage(el,pLang);if(H.clientFeat.langs[eLang]==="H9Y"){elements.add(el,eLang,sel);if(!isChild&&C.safeCopy){registerOnCopy(el)}}else if(!H.clientFeat.langs[eLang]){H.events.dispatch("error",{"msg":"Element with '"+eLang+"' found, but '"+eLang+".hpb' not loaded. Check language tags!"})}
const cn=el.childNodes;Array.prototype.forEach.call(cn,function eachChildNode(n){if(n.nodeType===1&&!nodeMatchedBy(n,matchingSelectors)){processElements(n,eLang,sel,!0)}})}
C.selectors.forEach(function eachSelector(sel){const nl=w.document.querySelectorAll(sel);Array.prototype.forEach.call(nl,function eachNode(n){processElements(n,getLang(n,!0),sel,!1)})});H.elementsReady=!0}
const wordHyphenatorPool=new Map();function createWordHyphenator(lo,lang,sel){const classSettings=C[sel];const hyphen=classSettings.hyphen;lo.cache.set(sel,new Map());function hyphenateCompound(word){const zeroWidthSpace=String.fromCharCode(8203);let parts=null;let wordHyphenator=null;let hw=word;if(classSettings.compound==="auto"||classSettings.compound==="all"){wordHyphenator=createWordHyphenator(lo,lang,sel);parts=word.split("-").map(function h7eParts(p){if(p.length>=classSettings.minWordLength){return wordHyphenator(p)}
return p});if(classSettings.compound==="auto"){hw=parts.join("-")}else{hw=parts.join("-"+zeroWidthSpace)}}else{hw=word.replace("-","-"+zeroWidthSpace)}
return hw}
function hyphenator(word){let hw=lo.cache.get(sel).get(word);if(!hw){if(lo.exceptions.has(word)){hw=lo.exceptions.get(word).replace(/-/g,classSettings.hyphen)}else if(word.indexOf("-")===-1){if(word.length>61){H.events.dispatch("error",{"msg":"found word longer than 61 characters"});hw=word}else{hw=lo.hyphenateFunction(word,hyphen,classSettings.leftminPerLang[lang],classSettings.rightminPerLang[lang])}}else{hw=hyphenateCompound(word)}
lo.cache.get(sel).set(word,hw)}
return hw}
wordHyphenatorPool.set(lang+"-"+sel,hyphenator);return hyphenator}
const orphanControllerPool=new Map();function createOrphanController(sel){function controlOrphans(ignore,leadingWhiteSpace,lastWord,trailingWhiteSpace){const classSettings=C[sel];let h=classSettings.hyphen;if(".\\+*?[^]$(){}=!<>|:-".indexOf(classSettings.hyphen)!==-1){h="\\"+classSettings.hyphen}
if(classSettings.orphanControl===3&&leadingWhiteSpace===" "){leadingWhiteSpace=String.fromCharCode(160)}
return leadingWhiteSpace+lastWord.replace(new RegExp(h,"g"),"")+trailingWhiteSpace}
orphanControllerPool.set(sel,controlOrphans);return controlOrphans}
function hyphenate(lang,sel,entity){const lo=H.languages.get(lang);const classSettings=C[sel];const minWordLength=classSettings.minWordLength;const normalize=C.normalize&&Boolean(String.prototype.normalize);const poolKey=lang+"-"+sel;const wordHyphenator=(wordHyphenatorPool.has(poolKey))?wordHyphenatorPool.get(poolKey):createWordHyphenator(lo,lang,sel);const orphanController=(orphanControllerPool.has(sel))?orphanControllerPool.get(sel):createOrphanController(sel);const re=lo.genRegExps.get(sel);function hyphenateText(text){let tn=null;if(normalize){tn=text.normalize("NFC").replace(re,wordHyphenator)}else{tn=text.replace(re,wordHyphenator)}
if(classSettings.orphanControl!==1){tn=tn.replace(/(\u0020*)(\S+)(\s*)$/,orphanController)}
return tn}
function hyphenateElement(el){H.events.dispatch("beforeElementHyphenation",{"el":el,"lang":lang});const cn=el.childNodes;Array.prototype.forEach.call(cn,function eachChildNode(n){if(n.nodeType===3&&n.data.length>=minWordLength){n.data=hyphenateText(n.data)}});elements.counter[0]-=1;H.events.dispatch("afterElementHyphenation",{"el":el,"lang":lang})}
let r=null;if(typeof entity==="string"){r=hyphenateText(entity)}else if(entity instanceof HTMLElement){hyphenateElement(entity)}
return r}
H.createHyphenator=function createHyphenator(lang){return function hyphenator(entity,sel){sel=sel||".hyphenate";return hyphenate(lang,sel,entity)}};H.unhyphenate=function unhyphenate(){elements.each(function eachLang(lang,els){els.forEach(function eachElem(elo){const n=elo.element.firstChild;const h=C[elo.selector].hyphen;n.data=n.data.replace(new RegExp(h,"g"),"")})})};function hyphenateLangElements(lang,elArr){if(elArr){elArr.forEach(function eachElem(elo){hyphenate(lang,elo.selector,elo.element)})}else{H.events.dispatch("error",{"msg":"engine for language '"+lang+"' loaded, but no elements found."})}
if(elements.counter[0]===0){H.events.dispatch("hyphenopolyEnd")}}
function convertExceptions(exc){const r=new Map();exc.split(", ").forEach(function eachExc(e){const key=e.replace(/-/g,"");r.set(key,e)});return r}
function createLangObj(lang){if(!H.languages){H.languages=new Map()}
if(!H.languages.has(lang)){H.languages.set(lang,empty())}
return H.languages.get(lang)}
function prepareLanguagesObj(lang,hyphenateFunction,alphabet,leftmin,rightmin){alphabet=alphabet.replace(/-/g,"");const lo=createLangObj(lang);if(!lo.engineReady){lo.cache=new Map();if(H.c.exceptions.global){if(H.c.exceptions[lang]){H.c.exceptions[lang]+=", "+H.c.exceptions.global}else{H.c.exceptions[lang]=H.c.exceptions.global}}
if(H.c.exceptions[lang]){lo.exceptions=convertExceptions(H.c.exceptions[lang]);delete H.c.exceptions[lang]}else{lo.exceptions=new Map()}
lo.genRegExps=new Map();lo.leftmin=leftmin;lo.rightmin=rightmin;lo.hyphenateFunction=hyphenateFunction;C.selectors.forEach(function eachSelector(sel){const classSettings=C[sel];if(classSettings.leftminPerLang===0){Object.defineProperty(classSettings,"leftminPerLang",setProp(empty(),2))}
if(classSettings.rightminPerLang===0){Object.defineProperty(classSettings,"rightminPerLang",setProp(empty(),2))}
if(classSettings.leftminPerLang[lang]){classSettings.leftminPerLang[lang]=Math.max(lo.leftmin,classSettings.leftmin,classSettings.leftminPerLang[lang])}else{classSettings.leftminPerLang[lang]=Math.max(lo.leftmin,classSettings.leftmin)}
if(classSettings.rightminPerLang[lang]){classSettings.rightminPerLang[lang]=Math.max(lo.rightmin,classSettings.rightmin,classSettings.rightminPerLang[lang])}else{classSettings.rightminPerLang[lang]=Math.max(lo.rightmin,classSettings.rightmin)}
lo.genRegExps.set(sel,new RegExp("[\\w"+alphabet+String.fromCharCode(8204)+"-]{"+classSettings.minWordLength+",}","gi"))});lo.engineReady=!0}
Hyphenopoly.events.dispatch("engineReady",{"msg":lang})}
function calculateHeapSize(targetSize){if(H.clientFeat.wasm){return Math.ceil(targetSize/65536)*65536}
const exp=Math.ceil(Math.log2(targetSize));if(exp<=12){return 1<<12}
if(exp<24){return 1<<exp}
return Math.ceil(targetSize/(1<<24))*(1<<24)}
const decode=(function makeDecoder(){let decoder=null;if(window.TextDecoder){const utf16ledecoder=new TextDecoder("utf-16le");decoder=function(ui16){return utf16ledecoder.decode(ui16)}}else{decoder=function(ui16){return String.fromCharCode.apply(null,ui16)}}
return decoder}());function calculateBaseData(hpbBuf){const hpbMetaData=new Uint32Array(hpbBuf).subarray(0,8);const valueStoreLength=hpbMetaData[7];const valueStoreOffset=1280;const patternTrieOffset=valueStoreOffset+valueStoreLength+(4-((valueStoreOffset+valueStoreLength)%4));const wordOffset=patternTrieOffset+(hpbMetaData[6]*4);return{"heapSize":Math.max(calculateHeapSize(wordOffset+576+hpbMetaData[2]+hpbMetaData[3]),32*1024*64),"hpbOffset":wordOffset+576,"hpbPatternsOffset":wordOffset+576+hpbMetaData[2],"hpbTranslateOffset":wordOffset+576+hpbMetaData[1],"hyphenatedWordOffset":wordOffset+320,"hyphenPointsOffset":wordOffset+256,"leftmin":hpbMetaData[4],"patternsLength":hpbMetaData[3],"patternTrieOffset":patternTrieOffset,"rightmin":hpbMetaData[5],"translatedWordOffset":wordOffset+128,"valueStoreOffset":valueStoreOffset,"wordOffset":wordOffset}}
function encloseHyphenateFunction(baseData,hyphenateFunc){const heapBuffer=H.clientFeat.wasm?baseData.wasmMemory.buffer:baseData.heapBuffer;const wordOffset=baseData.wordOffset;const hyphenatedWordOffset=baseData.hyphenatedWordOffset;const wordStore=(new Uint16Array(heapBuffer)).subarray(wordOffset>>1,(wordOffset>>1)+64);const defLeftmin=baseData.leftmin;const defRightmin=baseData.rightmin;const hydWrdStore=(new Uint16Array(heapBuffer)).subarray(hyphenatedWordOffset>>1,(hyphenatedWordOffset>>1)+128);return function enclHyphenate(word,hyphenchar,leftmin,rightmin){let i=0;const wordLength=word.length;leftmin=leftmin||defLeftmin;rightmin=rightmin||defRightmin;wordStore[0]=wordLength+2;wordStore[1]=95;while(i<wordLength){wordStore[i+2]=word.charCodeAt(i);i+=1}
wordStore[i+2]=95;if(hyphenateFunc(leftmin,rightmin)===1){word=decode(hydWrdStore.subarray(1,hydWrdStore[0]+1));if(hyphenchar!=="\u00AD"){word=word.replace(/\u00AD/g,hyphenchar)}}
return word}}
function instantiateWasmEngine(lang){Promise.all([H.binaries.get(lang),H.binaries.get("hyphenEngine")]).then(function onAll(binaries){const hpbBuf=binaries[0];const baseData=calculateBaseData(hpbBuf);const wasmModule=binaries[1];const specMem=H.specMems.get(lang);const wasmMemory=(specMem.buffer.byteLength>=baseData.heapSize)?specMem:new WebAssembly.Memory({"initial":baseData.heapSize/65536,"maximum":256});const ui32wasmMemory=new Uint32Array(wasmMemory.buffer);ui32wasmMemory.set(new Uint32Array(hpbBuf),baseData.hpbOffset>>2);baseData.wasmMemory=wasmMemory;WebAssembly.instantiate(wasmModule,{"env":{"memory":baseData.wasmMemory,"memoryBase":0},"ext":baseData}).then(function runWasm(result){const alphalen=result.exports.convert();prepareLanguagesObj(lang,encloseHyphenateFunction(baseData,result.exports.hyphenate),decode((new Uint16Array(wasmMemory.buffer)).subarray(385,384+alphalen)),baseData.leftmin,baseData.rightmin)})})}
function instantiateAsmEngine(lang){const hpbBuf=H.binaries.get(lang);const baseData=calculateBaseData(hpbBuf);const specMem=H.specMems.get(lang);const heapBuffer=(specMem.byteLength>=baseData.heapSize)?specMem:new ArrayBuffer(baseData.heapSize);const ui8Heap=new Uint8Array(heapBuffer);const ui8Patterns=new Uint8Array(hpbBuf);ui8Heap.set(ui8Patterns,baseData.hpbOffset);baseData.heapBuffer=heapBuffer;const theHyphenEngine=asmHyphenEngine({"Int32Array":window.Int32Array,"Math":Math,"Uint16Array":window.Uint16Array,"Uint8Array":window.Uint8Array},baseData,baseData.heapBuffer);const alphalen=theHyphenEngine.convert();prepareLanguagesObj(lang,encloseHyphenateFunction(baseData,theHyphenEngine.hyphenate),decode((new Uint16Array(heapBuffer)).subarray(385,384+alphalen)),baseData.leftmin,baseData.rightmin)}
let engineInstantiator=null;const hpb=[];function prepare(lang,engineType){if(lang==="*"){if(engineType==="wasm"){engineInstantiator=instantiateWasmEngine}else if(engineType==="asm"){engineInstantiator=instantiateAsmEngine}
hpb.forEach(function eachHbp(hpbLang){engineInstantiator(hpbLang)})}else if(engineInstantiator){engineInstantiator(lang)}else{hpb.push(lang)}}
H.events.define("contentLoaded",function onContentLoaded(){autoSetMainLanguage();collectElements();H.events.dispatch("elementsReady")},!1);H.events.define("elementsReady",function onElementsReady(){elements.each(function eachElem(lang,values){if(H.languages&&H.languages.has(lang)&&H.languages.get(lang).engineReady){hyphenateLangElements(lang,values)}})},!1);H.events.define("engineLoaded",function onEngineLoaded(e){prepare("*",e.msg)},!1);H.events.define("hpbLoaded",function onHpbLoaded(e){prepare(e.msg,"*")},!1);H.events.define("engineReady",function onEngineReady(e){if(H.elementsReady){hyphenateLangElements(e.msg,elements.list.get(e.msg))}},!1);H.events.define("hyphenopolyStart",null,!0);H.events.define("hyphenopolyEnd",function def(){w.clearTimeout(C.timeOutHandler);if(H.c.hide!=="none"){H.toggle("on")}},!1);H.events.define("beforeElementHyphenation",null,!0);H.events.define("afterElementHyphenation",null,!0);H.events.tempRegister.forEach(function eachEo(eo){H.events.addListener(eo.name,eo.handler,!1)});delete H.events.tempRegister;H.events.dispatch("hyphenopolyStart",{"msg":"Hyphenopoly started"});w.clearTimeout(H.c.timeOutHandler);Object.defineProperty(C,"timeOutHandler",setProp(w.setTimeout(function ontimeout(){H.events.dispatch("timeout",{"delay":C.timeout})},C.timeout),2));H.events.deferred.forEach(function eachDeferred(deferredeo){H.events.dispatch(deferredeo.name,deferredeo.data)});delete H.events.deferred}())}(window))
